#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
 Author:      fyso
 DateTime:    2017-08-26 12:24:41
 Description: 四种参数的组合！ 必选参数、默认参数、可变参数和关键字参数，
"""
# 在Python中定义函数，可以用必选参数、默认参数、可变参数和关键字参数，
# 这4种参数都可以一起使用，或者只用其中某些，
# 但是请注意，参数定义的顺序必须是：必选参数、默认参数、可变参数和关键字参数。
#

def func(a, b, c=0, *args, **kw):
    print 'a =', a, 'b =', b, 'c =', c, 'args =', args, 'kw =', kw

# func() error
func(1, 2)
func(1, 2, c=3)
func(1, 2, 3, 'a', 'b')
func(1, 2, 3, 'a', 'b', x=99)
#FY：理解了，必选是你不能少；默认可以不填，但是有默认值；；可变参数是个tuple；关键字参数是个dict
#


# 最神奇的是通过一个tuple和dict，你也可以调用该函数：
args = (1, 2, 3, 4)
kw = {'x': 99}
func(*args, **kw)

# 所以，对于任意函数，都可以通过类似func(*args, **kw)的形式调用它，无论它的参数是如何定义的。
def power(x, n=2):
    s = 1
    while n > 0:
        n = n - 1
        s = s * x
    return s

# print power(*args)   验证失败！
# 


# Python的函数具有非常灵活的参数形态，既可以实现简单的调用，又可以传入非常复杂的参数。
# 默认参数一定要用不可变对象，如果是可变对象，运行会有逻辑错误！

# 要注意定义可变参数和关键字参数的语法：
# *args是可变参数，args接收的是一个tuple；
# **kw是关键字参数，kw接收的是一个dict。

# 以及调用函数时如何传入可变参数和关键字参数的语法：
# 可变参数既可以直接传入：func(1, 2, 3)，又可以先组装list或tuple，再通过*args传入：func(*(1, 2, 3))；
# 关键字参数既可以直接传入：func(a=1, b=2)，又可以先组装dict，再通过**kw传入：func(**{'a': 1, 'b': 2})。
# 使用*args和**kw是Python的习惯写法，当然也可以用其他参数名，但最好使用习惯用法。